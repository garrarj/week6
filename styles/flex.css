/* Flexbox display property in CSS excels at creating layouts that work in one direction (e.g. row or column). It allows us to dictate what axis you would like the content to follow (left/right or top/bottom) and assign content to positions within that axis */

.flex-container{
    display: flex;

    /* Default flexx directiuon is 'row' */
    flex-direction: column;
}

.flex-container span:nth-of-type(1){
    background-color: var(--deSatOrange75);
}
.flex-container span:nth-of-type(2){
    background-color: var(--deSatPurple75);
    display: flex;
    flex-direction: row;

    justify-content: flex-end;/* This affects the placememt of elements on the axis - flex-start, flex-end, center */
    align-items: flex-end;/* this affects the placement of elements ACROSS axis */
}
.flex-container span:nth-of-type(3){
    background-color: var(--deSatTeal75);
}

.flex-container span:nth-of-type(2) div:nth-of-type(1){
    height: 50px;
    width: 50px;
    color: white;
    background-color: red;
}
.flex-container span:nth-of-type(2) div:nth-of-type(2){
    height: 50px;
    width: 50px;
    color: white;
    background-color: yellow;
}
.flex-container span:nth-of-type(2) div:nth-of-type(3){
    height: 100px;
    width: 100px;
    color: white;
    background-color: orange;
}
.flex-container span:nth-of-type(2) div:nth-of-type(4){
    height: 50px;
    width: 50px;
    color: white;
    background-color: blue;
}
.flex-container span:nth-of-type(2) div:nth-of-type(5){
    height: 50px;
    width: 50px;
    color: white;
    background-color: green;
}